diff --git a/install-deps b/install-deps
index b1d5a4d..8116d9a 100755
--- a/install-deps
+++ b/install-deps
@@ -175,7 +175,7 @@ elif [[ "$(uname)" == 'Linux' ]]; then
             echo "Some portion of the update is failed"
         fi
         # python-software-properties is required for apt-add-repository
-        sudo apt-get install -y python-software-properties
+        sudo apt-get install -y python3-software-properties
         echo "==> Found Ubuntu version ${ubuntu_major_version}.xx"
         if [[ $ubuntu_major_version -lt '12' ]]; then
             echo '==> Ubuntu version not supported.'
@@ -199,7 +199,7 @@ elif [[ "$(uname)" == 'Linux' ]]; then
         sudo apt-get install -y build-essential gcc g++ curl \
             cmake libreadline-dev git-core libqt4-dev libjpeg-dev \
             libpng-dev ncurses-dev imagemagick libzmq3-dev gfortran \
-            unzip gnuplot gnuplot-x11 ipython
+            unzip gnuplot gnuplot-x11 ipython3
 
         gcc_major_version=$(gcc --version | grep ^gcc | awk '{print $4}' | \
                             cut -c 1)
diff --git a/install.sh b/install.sh
index ad65434..65ce72d 100755
--- a/install.sh
+++ b/install.sh
@@ -96,13 +96,13 @@ then
    fi
 fi
 
-if [ -x "$path_to_nvcc" ] || [ -x "$path_to_nvidiasmi" ]
-then
-    echo "Found CUDA on your machine. Installing CMake 3.6 modules to get up-to-date FindCUDA"
-    cd ${THIS_DIR}/cmake/3.6 && \
-(cmake -E make_directory build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX="${PREFIX}" \
-        && make install) && echo "FindCuda bits of CMake 3.6 installed" || exit 1
-fi
+# if [ -x "$path_to_nvcc" ] || [ -x "$path_to_nvidiasmi" ]
+# then
+#     echo "Found CUDA on your machine. Installing CMake 3.6 modules to get up-to-date FindCUDA"
+#     cd ${THIS_DIR}/cmake/3.6 && \
+# (cmake -E make_directory build && cd build && cmake .. -DCMAKE_INSTALL_PREFIX="${PREFIX}" \
+#         && make install) && echo "FindCuda bits of CMake 3.6 installed" || exit 1
+# fi
 
 setup_lua_env_cmd=$($PREFIX/bin/luarocks path)
 eval "$setup_lua_env_cmd"
@@ -129,12 +129,12 @@ cd ${THIS_DIR}/extra/nngraph && $PREFIX/bin/luarocks make nngraph-scm-1.rockspec
 cd ${THIS_DIR}/pkg/image     && $PREFIX/bin/luarocks make image-1.1.alpha-0.rockspec   || exit 1
 cd ${THIS_DIR}/pkg/optim     && $PREFIX/bin/luarocks make optim-1.0.5-0.rockspec       || exit 1
 
-if [ -x "$path_to_nvcc" ]
-then
-    echo "Found CUDA on your machine. Installing CUDA packages"
-    cd ${THIS_DIR}/extra/cutorch && $PREFIX/bin/luarocks make rocks/cutorch-scm-1.rockspec || exit 1
-    cd ${THIS_DIR}/extra/cunn    && $PREFIX/bin/luarocks make rocks/cunn-scm-1.rockspec    || exit 1
-fi
+# if [ -x "$path_to_nvcc" ]
+# then
+#     echo "Found CUDA on your machine. Installing CUDA packages"
+#     cd ${THIS_DIR}/extra/cutorch && $PREFIX/bin/luarocks make rocks/cutorch-scm-1.rockspec || exit 1
+#     cd ${THIS_DIR}/extra/cunn    && $PREFIX/bin/luarocks make rocks/cunn-scm-1.rockspec    || exit 1
+# fi
 
 # Optional packages
 echo "Installing optional Torch packages"
@@ -147,11 +147,11 @@ cd ${THIS_DIR}/extra/threads        && $PREFIX/bin/luarocks make rocks/threads-s
 cd ${THIS_DIR}/extra/argcheck       && $PREFIX/bin/luarocks make rocks/argcheck-scm-1.rockspec
 
 # Optional CUDA packages
-if [ -x "$path_to_nvcc" ]
-then
-    echo "Found CUDA on your machine. Installing optional CUDA packages"
-    cd ${THIS_DIR}/extra/cudnn   && $PREFIX/bin/luarocks make cudnn-scm-1.rockspec
-fi
+# if [ -x "$path_to_nvcc" ]
+# then
+#     echo "Found CUDA on your machine. Installing optional CUDA packages"
+#     cd ${THIS_DIR}/extra/cudnn   && $PREFIX/bin/luarocks make cudnn-scm-1.rockspec
+# fi
 
 export PATH=$OLDPATH # Restore anaconda distribution if we took it out.
 
